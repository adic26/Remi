<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Instrument"
    targetNamespace="TsdLib.Instruments.xsd"
    elementFormDefault="qualified"
    xmlns="TsdLib.Instruments.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:simpleType name="ConnectionTypes">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Visa"/>
      <xs:enumeration value="Telnet"/>
      <xs:enumeration value="Ssh"/>
      <xs:enumeration value="Dummy"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ConnectionSettingTypes">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Boolean"/>
      <xs:enumeration value="Byte"/>
      <xs:enumeration value="Int16"/>
      <xs:enumeration value="Int32"/>
      <xs:enumeration value="Int64"/>
      <xs:enumeration value="String"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ClrTypes">
    <xs:union memberTypes="ConnectionSettingTypes">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Double"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  
  <xs:annotation>
    <xs:appinfo>TsdLib Instrument Schema</xs:appinfo>
    <xs:documentation xml:lang="en">Schema for defining 1st-order instrument XML definitions in the TsdLib Framework.</xs:documentation>
  </xs:annotation>

  <xs:element name="Instruments">
    <xs:annotation>
      <xs:documentation>Contains one or more Instrument definitions.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Instrument" type="InstrumentElement" minOccurs="1" maxOccurs="unbounded" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="InstrumentElement">
    <xs:annotation>
      <xs:documentation>Defines an instrument by specifying connection and command details.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="IdQuery" type="IdQueryElement" minOccurs="1" maxOccurs="1" />
      <xs:element name="ConnectionSetting" type="ConnectionSettingElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="ModelNumber" type="InfoElement" minOccurs="1" maxOccurs="1" />
      <xs:element name="SerialNumber" type="InfoElement" minOccurs="1" maxOccurs="1" />
      <xs:element name="FirmwareVersion" type="InfoElement" minOccurs="1" maxOccurs="1" />
      <xs:element name="Command" type="CommandElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Query" type="QueryElement" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="ByteQuery" type="ByteQueryElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Name" use="required">
      <xs:annotation>
        <xs:documentation>Name of the instrument. Will be used to name the CLR class generated.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ConnectionType" type="ConnectionTypes" use="required">
      <xs:annotation>
        <xs:documentation>Type of the connection protocol. Must be a CLR type derived from TsdLib.Instrument.ConnectionBase.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Interfaces">
      <xs:annotation>
        <xs:documentation>Optional: Interfaces that the generated class will implement. Multiple interfaces can be defined using a comma-separated list. Interfaces must be defined in the TsdLib.Instrument namespace.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="InitCommands">
      <xs:annotation>
        <xs:documentation>Optional: Semicolon-separated list of raw string command to send to the instrument on initialization.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="CommandDelay" type="xs:unsignedInt">
      <xs:annotation>
        <xs:documentation>Optional: A delay (in milliseconds) to wait before sending each command.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ConnectionSettingElement">
    <xs:annotation>
      <xs:documentation>Optional: Sets a custom connection attribute, ie. an NI-VISA drivel-level attribute.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Name" use="required">
      <xs:annotation>
        <xs:documentation>Name of the attribute to set.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ArgumentType" type="ConnectionSettingTypes" use="required">
      <xs:annotation>
        <xs:documentation>Data type of the value specified in @Value</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ArgumentValue" use="required">
      <xs:annotation>
        <xs:documentation>Value to assign to the attribute specified in @Name</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="IdQueryElement">
    <xs:annotation>
      <xs:documentation>Defines a message/response pair used to query an instrument for identification.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Response" use="required">
      <xs:annotation>
        <xs:documentation>A string expected to be contained within the response from the instrument.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Command">
      <xs:annotation>
        <xs:documentation>Message to send to the instrument to request identification.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="TermChar">
      <xs:annotation>
        <xs:documentation>Optional: A character that signals the end of the expected response from the instrument.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  
  <xs:complexType name="InfoElement">
    <xs:annotation>
      <xs:documentation>Defines a CLR property used to obtain information from the instrument.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Message" use="required">
      <xs:annotation>
        <xs:documentation>Raw string to send to the instrument.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="RegEx">
      <xs:annotation>
        <xs:documentation>Optional: Regular expression used to filter/parse the response from the instrument.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="TermChar">
      <xs:annotation>
        <xs:documentation>Optional: Optional: A character that signals the end of the expected response from the instrument.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="InitCommandElement">
    <xs:annotation>
      <xs:documentation>Command to send to the instrument on initialization.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Message" use="required">
      <xs:annotation>
        <xs:documentation>Semicolon-separated list of raw strings to send to the instrument.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="CommandElement">
    <xs:annotation>
      <xs:documentation>Defines a method to send a command to the instrument without reading a return value.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Parameter" type="ParameterElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attributeGroup ref="MethodAttributes"/>
  </xs:complexType>

  <xs:complexType name="QueryElement">
    <xs:annotation>
      <xs:documentation>Defines a method to send a command to the instrument, read a return string and optionally filter/parse the response.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Parameter" type="ParameterElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attributeGroup ref="MethodAttributes"/>
    <xs:attribute name="RegEx">
      <xs:annotation>
        <xs:documentation>Optional: Regular expression used to filter the raw response from the instrument.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ReturnType">
      <xs:annotation>
        <xs:documentation>CLR type that the response will be parsed into.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ByteQueryElement">
    <xs:annotation>
      <xs:documentation>Defines a method to send a command to the instrument and read back a specified number of bytes.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Parameter" type="ParameterElement" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attributeGroup ref="MethodAttributes"/>
    <xs:attribute name="ByteCount" type="xs:int">
      <xs:annotation>
        <xs:documentation>Number of bytes to read back from the instrument.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="TermChar">
      <xs:annotation>
        <xs:documentation>A character that signals the end of the expected response from the instrument.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:length value="1"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:attributeGroup name="MethodAttributes">
    <xs:attribute name="Name" use="required">
      <xs:annotation>
        <xs:documentation>Name to assign to the method.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Message" use="required">
      <xs:annotation>
        <xs:documentation>String to send to the instrument. Use {0}, {1} to specify locations to insert parameters.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Implements">
      <xs:annotation>
        <xs:documentation>Optional: Required only for VB code generatation. Specifies the interface from which the command method is implemented. When omitted, the first interface in the Instrument@Interfaces attribute will be used.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Delay" type="xs:unsignedInt">
      <xs:annotation>
        <xs:documentation>Optional: A delay (in milliseconds) to wait before sending the command. Overrides the global delay set in Instrument@CommandDelay</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:complexType name="ParameterElement">
    <xs:annotation>
      <xs:documentation>Defines a method parameter.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Type" type="ClrTypes" use="required">
      <xs:annotation>
        <xs:documentation>Type of the parameter.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Name" use="required">
      <xs:annotation>
        <xs:documentation>Name of the parameter. Will be used to name the CLR method parameter generated.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  
</xs:schema>